# update all systems for web development
function update() {
    local t="${1:-help}"

    # Update home brew
    if [ ${t} == "help" ]; then
        echo " "
        echo "------------------------------------------------------------------"
        echo "Update params:"
        echo " - all             : apdate all"
        echo " - alfred          : downlaod all Alfred 2 workflows for update"
        echo " - dock            : update the Dock layout"
        echo " - dot / dotfiles  : update dot files"
        echo " - brew / homebrew : update all brews"
        echo " - gems / gem      : update all ruby gems"
        echo " - node            : update node and all global npm's"
        echo " - npm             : update all global node packages"
        echo " - ruby            : update ruby and gems"
        echo " - sublime         : update Sublime Text settings"
        echo " - system          : update Os X software"
        echo "------------------------------------------------------------------"
        echo " "
    fi

    # Update system
    if [ ${t} == "system" ] || [ ${t} == "all" ]; then
        echo "Updating system"
        sudo softwareupdate -i -a
    fi

    # Update home brew
    if [ ${t} == "brew" ] || [ ${t} == "homebrew" ] || [ ${t} == "all" ]; then
        echo "Updating brew"
        brew update
        echo "Updating all brew packages"
        brew upgrade
        brew cleanup
    fi

    # Update ruby
    if [ ${t} == "ruby" ] || [ ${t} == "all" ]; then
        echo "Updating ruby"
        rvm get stable
        rvm reload
    fi

    # Update ruby gems
    if [ ${t} == "ruby" ] || [ ${t} == "gems" ] || [ ${t} == "gem" ] || [ ${t} == "all" ]; then
        echo "Updating gems"
        gem update --system
        gem update
    fi

    # Update node
    if [ ${t} == "node" ] || [ ${t} == "all" ]; then
        echo "Updating node"
        nvm install stable
        nvm alias default stable
    fi

    # Update npm packages
    if [ ${t} == "npm" ] || [ ${t} == "node" ] || [ ${t} == "all" ]; then
        echo "Updating npm"
        npm update npm -g
        echo "Updating all global npm packages"
        npm update -g
    fi

    # Update dot files
    if [ ${t} == "dot" ] || [ ${t} == "dotfiles" ] || [ ${t} == "all" ]; then
        echo "Updating dot files"
        source ~/Repos/dotfiles/bootstrap.sh --force
    fi

    # Update sublime settings
    if [ ${t} == "sublime" ] || [ ${t} == "all" ]; then
        echo "Updating Sublime Text settings"
        (
            cd ~/Repos/st3-sync
            git pull
        )
    fi

    # Update dock layout
    if [ ${t} == "dock" ] || [ ${t} == "all" ]; then
        echo "Updating Dock"
        dockutil --remove all --no-restart
        dockutil --add "/Applications/Utilities/Terminal.app" --no-restart
        dockSpacer
        dockutil --add "/Applications/Google Chrome Canary.app" --no-restart
        dockutil --add "/Applications/Google Chrome.app" --no-restart
        dockutil --add "/Applications/Safari.app" --no-restart
        dockutil --add "/Applications/Firefox.app" --no-restart
        dockSpacer
        dockutil --add "/Applications/GitHub.app" --no-restart
        # dockutil --add "/Applications/Microsoft Remote Desktop.app" --no-restart
        dockSpacer
        dockutil --add "/Applications/Sketch.app" --no-restart
        dockSpacer
        dockutil --add "/Applications/Reminders.app" --no-restart
        dockutil --add "/Applications/Mail.app" --no-restart
        dockutil --add "/Applications/Calendar.app" --no-restart
        dockSpacer
        dockutil --add "/Applications/Messages.app" --no-restart
        dockutil --add "/Applications/HipChat.app" --no-restart
        dockSpacer
        # dockutil --add "/Applications/Microsoft Office 2011/Microsoft Word.app" --no-restart
        # dockutil --add "/Applications/Microsoft Office 2011/Microsoft PowerPoint.app" --no-restart
        # dockSpacer
        dockutil --add "/Applications/Atom.app" --no-restart
        # dockutil --add "/Applications/Sublime Text.app" --no-restart
        dockSpacer
        dockutil --add "/Applications/Spotify.app" --no-restart

        dockutil --add "~/Documents" --no-restart
        dockutil --add "~/Repos" --no-restart
        dockutil --add "~/Downloads" --no-restart
        dockutil --add "~/Dropbox" --no-restart
        killall Dock
    fi

    # Download alfred workflows
    if [ ${t} == "alfred" ] || [ ${t} == "all" ]; then
        echo "Downloading Alfred 2 workflows"

        echo "Sublime Text"
        download "https://raw.githubusercontent.com/zenorocha/alfred-workflows/master/sublime-text/sublime-text.alfredworkflow" # sublime text

        echo "Package Manager"
        download "https://raw.githubusercontent.com/zenorocha/alfred-workflows/master/package-managers/package-managers.alfredworkflow" # package managers

        echo "Can I Use"
        download "https://raw.githubusercontent.com/zenorocha/alfred-workflows/master/caniuse/caniuse.alfredworkflow" # can i use

        echo "Colors"
        download "https://raw.githubusercontent.com/zenorocha/alfred-workflows/master/colors/colors.alfredworkflow" # colors

        echo "Dash"
        download "https://raw.githubusercontent.com/zenorocha/alfred-workflows/master/dash/dash.alfredworkflow" # dash

        echo "Github"
        download "https://raw.githubusercontent.com/zenorocha/alfred-workflows/master/github/github.alfredworkflow" # github

        echo "Domainr"
        download "https://raw.githubusercontent.com/dingyi/Alfred-Workflows/master/Domainr/Domainr.alfredworkflow" # domainr

        echo "Encode/Decode"
        download "https://raw.githubusercontent.com/zenorocha/alfred-workflows/master/encode-decode/encode-decode.alfredworkflow" # encode/decode

        echo "IP Address"
        download "https://raw.githubusercontent.com/zenorocha/alfred-workflows/master/ip-address/ip-address.alfredworkflow" #ip lookup

        echo "Kill Process"
        download "https://raw.githubusercontent.com/zenorocha/alfred-workflows/master/kill-process/kill-process.alfredworkflow" # kill process

        echo "iOs Simuator"
        download "https://raw.githubusercontent.com/zenorocha/alfred-workflows/master/ios-simulator/ios-simulator.alfredworkflow" # ios simulator

        echo "Google Translate"
        download "https://raw.githubusercontent.com/thomashempel/AlfredGoogleTranslateWorkflow/master/GoogleTranslate.alfredworkflow"

        echo "Reminders"
        download "https://dl.dropboxusercontent.com/u/103385/Reminders.alfredworkflow"

        echo "MailTo"
        download "https://raw.githubusercontent.com/deanishe/alfred-mailto/master/MailTo.alfredworkflow"

        echo "Toggle WI-FI"
        download "https://raw.githubusercontent.com/aiyodk/Alfred-Extensions/master/AlfredApp_2.x/Wi-Fi-Toggle/Wi-Fi-Toggle.alfredworkflow"

        echo "Hash"
        download "https://raw.githubusercontent.com/willfarrell/alfred-hash-workflow/master/Hash.alfredworkflow"

        echo "Atom"
        download "https://raw.githubusercontent.com/franzheidl/alfred-workflows/master/open-with-atom/Open%20with%20Atom.alfredworkflow"

        echo "Hidden files"
        download "https://s3.amazonaws.com/f.cl.ly/items/443a062A071G3s121S31/Toggle%20Visibility%20of%20Hidden%20Files.alfredworkflow"

        echo "IMDB search"
        download "https://raw.githubusercontent.com/packal/repository/master/com.targumanu.imdbsearch/imdb_search.alfredworkflow"

        echo "Alfred theme"
        download "https://raw.githubusercontent.com/jvdamgaard/dotfiles/master/.init/Jakob.alfredappearance"

        open ~/Downloads
    fi
}
